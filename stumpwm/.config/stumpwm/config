; -*-lisp-*-
; vim:fileencoding=utf-8:filetype=lisp
;;;; StumpWM configuration file.
;;;; note: to reload the config, do `<prefix> : (loadrc) RET`
(in-package :stumpwm)

;;; 1 LOADING CONTRIB MODULES
;; https://github.com/stumpwm/stumpwm/wiki/Modules#contrib-repository
;; https://github.com/stumpwm/stumpwm-contrib

;; cpu information on the mode-line
(load-module "cpu")

;; turn groups into a (x, y, z) coordinate system
(load-module "spatial-groups")

;;; 2 UTILITIES
(defcommand toggle-bar () ()
  "Toggle the status bar on and off"
  (toggle-mode-line (current-screen) (current-head)))

(defun display-volume-info ()
  "Print the current volume info, i.e., if mute, left, and right volumes"
  (let* ((raw-output (run-shell-command "pactl list sinks" t))
         (mute-value (nth-value 1 (cl-ppcre:scan-to-strings
                                   "Mute: ([a-z]+)"
                                   raw-output)))
         (mute-p (string= (svref mute-value 0) "yes"))
         (vol-values (nth-value 1 (cl-ppcre:scan-to-strings
                                   "Volume: .+/\\s+(\\d+).+/.+/\\s+(\\d+).+/"
                                   raw-output)))
         (vol-l (parse-integer (svref vol-values 0)))
         (vol-r (parse-integer (svref vol-values 1)))
         (*record-last-msg-override* t))
    (message "Volume: ~:[~;(MUTE) ~]~d%, ~d%" mute-p vol-l vol-r)))

(defcommand volume- () ()
  "Decrease volume by 5%"
  (run-shell-command "pactl set-sink-volume @DEFAULT_SINK@ -5%" t)
  (display-volume-info))

(defcommand volume-- () ()
  "Decrease volume by 25%"
  (run-shell-command "pactl set-sink-volume @DEFAULT_SINK@ -25%" t)
  (display-volume-info))

(defcommand volume+ () ()
  "Increase volume by 5%"
  (run-shell-command "pactl set-sink-volume @DEFAULT_SINK@ +5%" t)
  (display-volume-info))

(defcommand volume++ () ()
  "Increase volume by 25%"
  (run-shell-command "pactl set-sink-volume @DEFAULT_SINK@ +25%" t)
  (display-volume-info))

(defcommand toggle-mute () ()
  "Toggle mute on/off"
  (run-shell-command "pactl set-sink-mute @DEFAULT_SINK@ toggle" t)
  (display-volume-info))

(defun display-brightness-message ()
  "Get the integer part of the brightness value"
  (message "Brightness: ~a~%" (run-shell-command "xbacklight -get | cut -d . -f 1" t)))

(defcommand brightness- () ()
  "Decrease the monitor's brightness by 10%"
  (let ((*record-last-msg-override* t))
    (run-shell-command "xbacklight -dec 10" t)
    (display-brightness-message)))

(defcommand brightness+ () ()
  "Increase the monitor's brightness by 10%"
  (let ((*record-last-msg-override* t))
    (run-shell-command "xbacklight -inc 10" t)
    (display-brightness-message)))

(defcommand prompt-poweroff () ()
  "Prompt the user to confirm powering off"
  (if (y-or-n-p "Power off? ")
      (run-shell-command "poweroff")
      (xlib:unmap-window (screen-message-window (current-screen)))))

(defcommand prompt-reboot () ()
  "Prompt the user to confirm rebooting"
  (if (y-or-n-p "Reboot? ")
      (run-shell-command "reboot")
      (xlib:unmap-window (screen-message-window (current-screen)))))

(defcommand prompt-lockscreen () ()
  "Prompt the user to confirm locking the screen"
  (if (y-or-n-p "Lock screen? ")
      (run-shell-command "xscreensaver-command --lock")
      (xlib:unmap-window (screen-message-window (current-screen)))))

;;; GENERAL STUFF
;; enable which-key (display available keybindings)
(add-hook *key-press-hook* 'which-key-mode-key-press-hook)

;;; 3 VISUAL AND COLOURS
;;                 dark     bright1   bright2  white-ish
(setf *colors* `("#170420" "#ea1646" "#870d2c" "#ddfafa"))
(setf *default-bg-color* (first *colors*))
(set-border-color (fourth *colors*))
(set-focus-color (second *colors*))
(set-unfocus-color (first *colors*))
(set-float-focus-color (second *colors*))
(set-float-unfocus-color (third *colors*))
(setf *normal-border-width* 1)
(setf *transient-border-width* 1)

;;; 4 FONT CONFIGURATION
;; use `xfontsel` to query available fonts
(or (set-font "-*-terminus-medium-r-normal-*-14-*-*-*-*-*-*-*")
    (set-font "9x15bold"))

;;; 5 MODE-LINE
;; the windows module
;; check available segments in stumpwm's `primitives.lisp`
(setf *window-format* "%m%n%s%c")

;; the datetime module
;;   <day-of-week-abbr>, <DD> <month-name> <YYYY> - <HH>:<MM>
(setf *time-modeline-string* "%a, %d %B %Y - %R")

;; setting the modules to display
;;   %n     current group module (configured with `stumpwm::*group-format*`)
;;   %W     windows module for the current group (configured with `stumpwm::*window-format*`)
;;   %^>    justify right the rest of the string
;;   %C     CPU module (requires the `cpu` contrib module configured with `cpu::*cpu-modeline-fmt*`)
;;   %d     datetime module (configured with `stumpwm::*time-modeline-string*`)
(setf *screen-mode-line-format* (list "[%n]" "%W" "^>" "%C" " | " "%d"))

;; colours
(setf *mode-line-background-color* (first *colors*))
(setf *mode-line-foreground-color* (second *colors*))
(setf *mode-line-border-color* (first *colors*))
(setf *mode-line-border-width* 0)
(setf *mode-line-position* :bottom)

;; the number of seconds between updates
(setf *mode-line-timeout* 10)

;; enable mode-line AFTER configuring it
(enable-mode-line (current-screen) (current-head) t)

;;; 6 KEYBINDINGS
;; modifiers: control (C-), alt (A-), meta (M-), super (s-), shift (S-), and hyper (H-)
;; use Super+Space as the prefix
(set-prefix-key (kbd "s-SPC"))

;; change focus on mouse click
(setf *mouse-focus-policy* :click)

;; toggle mode-line/statusbar
(define-key *root-map* (kbd "t") "toggle-bar")

;; run programs
(define-key *top-map* (kbd "s-RET") "exec st")
(define-key *root-map* (kbd "Menu") "exec ,dmenu_run_xres")
(define-key *root-map* (kbd "b") "exec librewolf")
(define-key *root-map* (kbd "B") "exec qutebrowser")
(define-key *root-map* (kbd "z") "exec zeal")
(define-key *root-map* (kbd "C-e") "exec emacs")
(define-key *root-map* (kbd "e") "exec emacsclient -ca ''")

;; volume controls
(define-key *top-map* (kbd "XF86AudioLowerVolume") "volume-")
(define-key *top-map* (kbd "S-XF86AudioLowerVolume") "volume--")
(define-key *top-map* (kbd "XF86AudioRaiseVolume") "volume+")
(define-key *top-map* (kbd "S-XF86AudioRaiseVolume") "volume++")
(define-key *top-map* (kbd "XF86AudioMute") "toggle-mute")

;; screen brightness controls
(define-key *top-map* (kbd "XF86MonBrightnessDown") "brightness-")
(define-key *top-map* (kbd "XF86MonBrightnessUp") "brightness+")

;; lock screen, reboot, and poweroff
(define-key *root-map* (kbd "s-l") "prompt-lockscreen")
(define-key *root-map* (kbd "s-r") "prompt-reboot")
(define-key *root-map* (kbd "s-p") "prompt-poweroff")

;; screenshots
(define-key *top-map* (kbd "SunPrint_Screen") "exec flameshot screen -p ~/Pictures/screenshots")
(define-key *top-map* (kbd "Sys_Req") "exec flameshot gui")  ; shift + print-screen

;; navigate windows in a group
(define-key *top-map* (kbd "s-n") "next-in-frame")
(define-key *top-map* (kbd "s-p") "prev-in-frame")
(define-key *top-map* (kbd "s-M-n") "next")
(define-key *top-map* (kbd "s-M-p") "prev")
(define-key *top-map* (kbd "s-TAB") "other-window")

;;; 6.1 spatial groups
;; move between splits in the current group
(define-key *groups-map* (kbd "S-Left") "move-focus left")
(define-key *groups-map* (kbd "S-Down") "move-focus down")
(define-key *groups-map* (kbd "S-Up") "move-focus up")
(define-key *groups-map* (kbd "S-Right") "move-focus right")

;; move between groups in the current desktop
(define-key *groups-map* (kbd "Left") "coord-left")
(define-key *groups-map* (kbd "Down") "coord-down")
(define-key *groups-map* (kbd "Up") "coord-up")
(define-key *groups-map* (kbd "Right") "coord-right")

;; move betwen desktops
(define-key *groups-map* (kbd "p") "coord-taskleft")
(define-key *groups-map* (kbd "n") "coord-taskright")

;; jump to the current desktop's origin group (x: 0, y: 0)
(define-key *groups-map* (kbd "c") "coord-taskorigin")

;; jump to the previous group
(define-key *groups-map* (kbd "TAB") "coord-taskpop")

;; repack the window numbering to remove gaps
(define-key *root-map* (kbd "Delete") "repack-window-numbers")

;; kill all windows in the current group
(define-key *groups-map* (kbd "K") "kill-windows-current-group")
